#!/bin/sh
# Adapted from https://github.com/Redfern/dot-net-core-pre-push-checks/blob/master/pre-push

protected_branch='main'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color


# only run this if you are pushing to master
if [[ $current_branch = $protected_branch ]] ; then
    echo -e "${YELLOW}Running pre push to master check...${NC}"

    echo -e "${YELLOW}Trying to build Project project...${NC}"
    
    #Let's speed things up a little bit
    DOTNET_CLI_TELEMETRY_OPTOUT=1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
    
    tests_passed=false
    # build the project
    dotnet build

    # $? is a shell variable which stores the return code from what we just ran
    rc=$?
    if [[ $rc != 0 ]] ; then
        echo -e "${RED}Failed to build the project, please fix this and push again${NC}"
        echo ""
        exit $rc
    fi

    # navigate to the test project to run the tests
    # TODO: change this to your test project directory
    unitTestPat="*UnitTests"
    integrationTestPat="*IntegrationTests"


    function runTests() {
        echo -e "${YELLOW}Running the tests for $1${NC}"
        cd $1
        dotnet test
        if [[ $? == 0 ]] ; then
            echo -e "${GREEN}$1 tests passed!${NC}"
            tests_passed=true
        else
             # A non-zero return code means an error occurred, so tell the user and exit
            echo -e "${RED}$1 tests failed, please fix and push again${NC}"
            echo ""
            tests_passed=false
        fi
        cd ..
    }

    echo "Finding Unit Tests"
    for dir in "${unitTestPat}/";
    do
        runTests $dir
    done

    if [ "$tests_passed" == true ]; then
    echo "Finding Integration Tests"
    for dir in "${integrationTestPat}/";
    do
        runTests $dir
    done
    fi


    if [ "$tests_passed" == false ] ; then
        echo -e "${RED}Pre Push Checks FAILED!${NC}"
        echo ""
        exit 1
    fi

    if [ "$tests_passed" == true ] ; then
        echo -e "${GREEN}Pre push check passed!${NC}"
        echo ""
        exit 0
    fi
fi